{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "jjrevset",
  "rules": {
    "source_file": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "'''"
            },
            {
              "type": "SYMBOL",
              "name": "program"
            },
            {
              "type": "STRING",
              "value": "'''"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "\"\"\""
            },
            {
              "type": "SYMBOL",
              "name": "program"
            },
            {
              "type": "STRING",
              "value": "\"\"\""
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "program"
        }
      ]
    },
    "program": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "program_modifier"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "program_modifier": {
      "type": "PREC",
      "value": 10,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "strict_identifier"
          },
          {
            "type": "SYMBOL",
            "name": "pattern_kind_op"
          }
        ]
      }
    },
    "expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "negate_op"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_range_expression"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_infix_op"
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SYMBOL",
                  "name": "negate_op"
                }
              },
              {
                "type": "SYMBOL",
                "name": "_range_expression"
              }
            ]
          }
        }
      ]
    },
    "_range_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_neighbors_expression"
            },
            {
              "type": "SYMBOL",
              "name": "_range_ops"
            },
            {
              "type": "SYMBOL",
              "name": "_neighbors_expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_neighbors_expression"
            },
            {
              "type": "SYMBOL",
              "name": "_range_post_ops"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_range_pre_ops"
            },
            {
              "type": "SYMBOL",
              "name": "_neighbors_expression"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_neighbors_expression"
        },
        {
          "type": "SYMBOL",
          "name": "_range_all_ops"
        }
      ]
    },
    "_neighbors_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "primary"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "parents_op"
              },
              {
                "type": "SYMBOL",
                "name": "children_op"
              }
            ]
          }
        }
      ]
    },
    "primary": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "("
            },
            {
              "type": "SYMBOL",
              "name": "expression"
            },
            {
              "type": "STRING",
              "value": ")"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "function"
        },
        {
          "type": "SYMBOL",
          "name": "string_pattern"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_symbol"
            },
            {
              "type": "SYMBOL",
              "name": "at_op"
            },
            {
              "type": "SYMBOL",
              "name": "_symbol"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_symbol"
            },
            {
              "type": "SYMBOL",
              "name": "at_op"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_symbol"
        },
        {
          "type": "SYMBOL",
          "name": "at_op"
        }
      ]
    },
    "string_pattern": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "strict_identifier"
        },
        {
          "type": "SYMBOL",
          "name": "pattern_kind_op"
        },
        {
          "type": "SYMBOL",
          "name": "_symbol"
        }
      ]
    },
    "function": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "strict_identifier"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "function_arguments"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "function_name": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "function_arguments": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_argument"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "_argument"
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": ","
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "_argument": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "keyword_argument"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "keyword_argument": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "strict_identifier"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "at_op": {
      "type": "STRING",
      "value": "@"
    },
    "pattern_kind_op": {
      "type": "STRING",
      "value": ":"
    },
    "parents_op": {
      "type": "STRING",
      "value": "-"
    },
    "children_op": {
      "type": "STRING",
      "value": "+"
    },
    "dag_range_op": {
      "type": "STRING",
      "value": "::"
    },
    "dag_range_pre_op": {
      "type": "STRING",
      "value": "::"
    },
    "dag_range_post_op": {
      "type": "STRING",
      "value": "::"
    },
    "dag_range_all_op": {
      "type": "STRING",
      "value": "::"
    },
    "range_op": {
      "type": "STRING",
      "value": ".."
    },
    "range_pre_op": {
      "type": "STRING",
      "value": ".."
    },
    "range_post_op": {
      "type": "STRING",
      "value": ".."
    },
    "range_all_op": {
      "type": "STRING",
      "value": ".."
    },
    "_range_ops": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "dag_range_op"
        },
        {
          "type": "SYMBOL",
          "name": "range_op"
        }
      ]
    },
    "_range_pre_ops": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "dag_range_pre_op"
        },
        {
          "type": "SYMBOL",
          "name": "range_pre_op"
        }
      ]
    },
    "_range_post_ops": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "dag_range_post_op"
        },
        {
          "type": "SYMBOL",
          "name": "range_post_op"
        }
      ]
    },
    "_range_all_ops": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "dag_range_all_op"
        },
        {
          "type": "SYMBOL",
          "name": "range_all_op"
        }
      ]
    },
    "negate_op": {
      "type": "STRING",
      "value": "~"
    },
    "union_op": {
      "type": "STRING",
      "value": "|"
    },
    "intersection_op": {
      "type": "STRING",
      "value": "&"
    },
    "difference_op": {
      "type": "STRING",
      "value": "~"
    },
    "_infix_op": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "union_op"
        },
        {
          "type": "SYMBOL",
          "name": "intersection_op"
        },
        {
          "type": "SYMBOL",
          "name": "difference_op"
        }
      ]
    },
    "string_literal": {
      "type": "PATTERN",
      "value": "\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\""
    },
    "raw_string_literal": {
      "type": "PATTERN",
      "value": "'[^']*'"
    },
    "_symbol": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "string_literal"
        },
        {
          "type": "SYMBOL",
          "name": "raw_string_literal"
        }
      ]
    },
    "strict_identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z0-9_\\/][a-zA-Z0-9_\\/+.-]*"
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z0-9_\\/][a-zA-Z0-9_\\/+.-]*"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}